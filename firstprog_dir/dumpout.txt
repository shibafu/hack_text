
firstprog:     ファイル形式 elf64-x86-64


セクション .interp の逆アセンブル:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x16b>
  400248:	78 38                	js     400282 <_init-0x15e>
  40024a:	36                   	ss
  40024b:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

セクション .note.ABI-tag の逆アセンブル:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 18                	add    %bl,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

セクション .note.gnu.build-id の逆アセンブル:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 a0 32 cc 33 92    	add    %ah,-0x6dcc33ce(%rax)
  400289:	e0 64                	loopne 4002ef <_init-0xf1>
  40028b:	bd 38 69 09 c6       	mov    $0xc6096938,%ebp
  400290:	90                   	nop
  400291:	a3                   	.byte 0xa3
  400292:	9e                   	sahf   
  400293:	ff                   	.byte 0xff
  400294:	ad                   	lods   %ds:(%rsi),%eax
  400295:	b9                   	.byte 0xb9
  400296:	5d                   	pop    %rbp
  400297:	a0                   	.byte 0xa0

セクション .gnu.hash の逆アセンブル:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

セクション .dynsym の逆アセンブル:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     (%rax),%eax
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	10 00                	adc    %al,(%rax)
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	22 00                	and    (%rax),%al
  400302:	00 00                	add    %al,(%rax)
  400304:	20 00                	and    %al,(%rax)
	...

セクション .dynstr の逆アセンブル:

0000000000400318 <.dynstr>:
  400318:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40031c:	63 2e                	movslq (%rsi),%ebp
  40031e:	73 6f                	jae    40038f <_init-0x51>
  400320:	2e 36 00 70 75       	cs add %dh,%cs:%ss:0x75(%rax)
  400325:	74 73                	je     40039a <_init-0x46>
  400327:	00 5f 5f             	add    %bl,0x5f(%rdi)
  40032a:	6c                   	insb   (%dx),%es:(%rdi)
  40032b:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400332:	72 74                	jb     4003a8 <_init-0x38>
  400334:	5f                   	pop    %rdi
  400335:	6d                   	insl   (%dx),%es:(%rdi)
  400336:	61                   	(bad)  
  400337:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  40033e:	6f                   	outsl  %ds:(%rsi),(%dx)
  40033f:	6e                   	outsb  %ds:(%rsi),(%dx)
  400340:	5f                   	pop    %rdi
  400341:	73 74                	jae    4003b7 <_init-0x29>
  400343:	61                   	(bad)  
  400344:	72 74                	jb     4003ba <_init-0x26>
  400346:	5f                   	pop    %rdi
  400347:	5f                   	pop    %rdi
  400348:	00 47 4c             	add    %al,0x4c(%rdi)
  40034b:	49                   	rex.WB
  40034c:	42                   	rex.X
  40034d:	43 5f                	rex.XB pop %r15
  40034f:	32 2e                	xor    (%rsi),%ch
  400351:	32 2e                	xor    (%rsi),%ch
  400353:	35                   	.byte 0x35
	...

セクション .gnu.version の逆アセンブル:

0000000000400356 <.gnu.version>:
  400356:	00 00                	add    %al,(%rax)
  400358:	02 00                	add    (%rax),%al
  40035a:	02 00                	add    (%rax),%al
	...

セクション .gnu.version_r の逆アセンブル:

0000000000400360 <.gnu.version_r>:
  400360:	01 00                	add    %eax,(%rax)
  400362:	01 00                	add    %eax,(%rax)
  400364:	01 00                	add    %eax,(%rax)
  400366:	00 00                	add    %al,(%rax)
  400368:	10 00                	adc    %al,(%rax)
  40036a:	00 00                	add    %al,(%rax)
  40036c:	00 00                	add    %al,(%rax)
  40036e:	00 00                	add    %al,(%rax)
  400370:	75 1a                	jne    40038c <_init-0x54>
  400372:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400378:	31 00                	xor    %eax,(%rax)
  40037a:	00 00                	add    %al,(%rax)
  40037c:	00 00                	add    %al,(%rax)
	...

セクション .rela.dyn の逆アセンブル:

0000000000400380 <.rela.dyn>:
  400380:	f8                   	clc    
  400381:	0f 60 00             	punpcklbw (%rax),%mm0
  400384:	00 00                	add    %al,(%rax)
  400386:	00 00                	add    %al,(%rax)
  400388:	06                   	(bad)  
  400389:	00 00                	add    %al,(%rax)
  40038b:	00 03                	add    %al,(%rbx)
	...

セクション .rela.plt の逆アセンブル:

0000000000400398 <.rela.plt>:
  400398:	18 10                	sbb    %dl,(%rax)
  40039a:	60                   	(bad)  
  40039b:	00 00                	add    %al,(%rax)
  40039d:	00 00                	add    %al,(%rax)
  40039f:	00 07                	add    %al,(%rdi)
  4003a1:	00 00                	add    %al,(%rax)
  4003a3:	00 01                	add    %al,(%rcx)
	...
  4003ad:	00 00                	add    %al,(%rax)
  4003af:	00 20                	add    %ah,(%rax)
  4003b1:	10 60 00             	adc    %ah,0x0(%rax)
  4003b4:	00 00                	add    %al,(%rax)
  4003b6:	00 00                	add    %al,(%rax)
  4003b8:	07                   	(bad)  
  4003b9:	00 00                	add    %al,(%rax)
  4003bb:	00 02                	add    %al,(%rdx)
	...
  4003c5:	00 00                	add    %al,(%rax)
  4003c7:	00 28                	add    %ch,(%rax)
  4003c9:	10 60 00             	adc    %ah,0x0(%rax)
  4003cc:	00 00                	add    %al,(%rax)
  4003ce:	00 00                	add    %al,(%rax)
  4003d0:	07                   	(bad)  
  4003d1:	00 00                	add    %al,(%rax)
  4003d3:	00 03                	add    %al,(%rbx)
	...

セクション .init の逆アセンブル:

00000000004003e0 <_init>:
  4003e0:	48 83 ec 08          	sub    $0x8,%rsp
  4003e4:	48 8b 05 0d 0c 20 00 	mov    0x200c0d(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4003eb:	48 85 c0             	test   %rax,%rax
  4003ee:	74 05                	je     4003f5 <_init+0x15>
  4003f0:	e8 3b 00 00 00       	callq  400430 <__gmon_start__@plt>
  4003f5:	48 83 c4 08          	add    $0x8,%rsp
  4003f9:	c3                   	retq   

セクション .plt の逆アセンブル:

0000000000400400 <puts@plt-0x10>:
  400400:	ff 35 02 0c 20 00    	pushq  0x200c02(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400406:	ff 25 04 0c 20 00    	jmpq   *0x200c04(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40040c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400410 <puts@plt>:
  400410:	ff 25 02 0c 20 00    	jmpq   *0x200c02(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400416:	68 00 00 00 00       	pushq  $0x0
  40041b:	e9 e0 ff ff ff       	jmpq   400400 <_init+0x20>

0000000000400420 <__libc_start_main@plt>:
  400420:	ff 25 fa 0b 20 00    	jmpq   *0x200bfa(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400426:	68 01 00 00 00       	pushq  $0x1
  40042b:	e9 d0 ff ff ff       	jmpq   400400 <_init+0x20>

0000000000400430 <__gmon_start__@plt>:
  400430:	ff 25 f2 0b 20 00    	jmpq   *0x200bf2(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400436:	68 02 00 00 00       	pushq  $0x2
  40043b:	e9 c0 ff ff ff       	jmpq   400400 <_init+0x20>

セクション .text の逆アセンブル:

0000000000400440 <_start>:
  400440:	31 ed                	xor    %ebp,%ebp
  400442:	49 89 d1             	mov    %rdx,%r9
  400445:	5e                   	pop    %rsi
  400446:	48 89 e2             	mov    %rsp,%rdx
  400449:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40044d:	50                   	push   %rax
  40044e:	54                   	push   %rsp
  40044f:	49 c7 c0 d0 05 40 00 	mov    $0x4005d0,%r8
  400456:	48 c7 c1 60 05 40 00 	mov    $0x400560,%rcx
  40045d:	48 c7 c7 2d 05 40 00 	mov    $0x40052d,%rdi
  400464:	e8 b7 ff ff ff       	callq  400420 <__libc_start_main@plt>
  400469:	f4                   	hlt    
  40046a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400470 <deregister_tm_clones>:
  400470:	b8 47 10 60 00       	mov    $0x601047,%eax
  400475:	55                   	push   %rbp
  400476:	48 2d 40 10 60 00    	sub    $0x601040,%rax
  40047c:	48 83 f8 0e          	cmp    $0xe,%rax
  400480:	48 89 e5             	mov    %rsp,%rbp
  400483:	77 02                	ja     400487 <deregister_tm_clones+0x17>
  400485:	5d                   	pop    %rbp
  400486:	c3                   	retq   
  400487:	b8 00 00 00 00       	mov    $0x0,%eax
  40048c:	48 85 c0             	test   %rax,%rax
  40048f:	74 f4                	je     400485 <deregister_tm_clones+0x15>
  400491:	5d                   	pop    %rbp
  400492:	bf 40 10 60 00       	mov    $0x601040,%edi
  400497:	ff e0                	jmpq   *%rax
  400499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004004a0 <register_tm_clones>:
  4004a0:	b8 40 10 60 00       	mov    $0x601040,%eax
  4004a5:	55                   	push   %rbp
  4004a6:	48 2d 40 10 60 00    	sub    $0x601040,%rax
  4004ac:	48 c1 f8 03          	sar    $0x3,%rax
  4004b0:	48 89 e5             	mov    %rsp,%rbp
  4004b3:	48 89 c2             	mov    %rax,%rdx
  4004b6:	48 c1 ea 3f          	shr    $0x3f,%rdx
  4004ba:	48 01 d0             	add    %rdx,%rax
  4004bd:	48 d1 f8             	sar    %rax
  4004c0:	75 02                	jne    4004c4 <register_tm_clones+0x24>
  4004c2:	5d                   	pop    %rbp
  4004c3:	c3                   	retq   
  4004c4:	ba 00 00 00 00       	mov    $0x0,%edx
  4004c9:	48 85 d2             	test   %rdx,%rdx
  4004cc:	74 f4                	je     4004c2 <register_tm_clones+0x22>
  4004ce:	5d                   	pop    %rbp
  4004cf:	48 89 c6             	mov    %rax,%rsi
  4004d2:	bf 40 10 60 00       	mov    $0x601040,%edi
  4004d7:	ff e2                	jmpq   *%rdx
  4004d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004004e0 <__do_global_dtors_aux>:
  4004e0:	80 3d 59 0b 20 00 00 	cmpb   $0x0,0x200b59(%rip)        # 601040 <__TMC_END__>
  4004e7:	75 11                	jne    4004fa <__do_global_dtors_aux+0x1a>
  4004e9:	55                   	push   %rbp
  4004ea:	48 89 e5             	mov    %rsp,%rbp
  4004ed:	e8 7e ff ff ff       	callq  400470 <deregister_tm_clones>
  4004f2:	5d                   	pop    %rbp
  4004f3:	c6 05 46 0b 20 00 01 	movb   $0x1,0x200b46(%rip)        # 601040 <__TMC_END__>
  4004fa:	f3 c3                	repz retq 
  4004fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400500 <frame_dummy>:
  400500:	48 83 3d 18 09 20 00 	cmpq   $0x0,0x200918(%rip)        # 600e20 <__JCR_END__>
  400507:	00 
  400508:	74 1e                	je     400528 <frame_dummy+0x28>
  40050a:	b8 00 00 00 00       	mov    $0x0,%eax
  40050f:	48 85 c0             	test   %rax,%rax
  400512:	74 14                	je     400528 <frame_dummy+0x28>
  400514:	55                   	push   %rbp
  400515:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  40051a:	48 89 e5             	mov    %rsp,%rbp
  40051d:	ff d0                	callq  *%rax
  40051f:	5d                   	pop    %rbp
  400520:	e9 7b ff ff ff       	jmpq   4004a0 <register_tm_clones>
  400525:	0f 1f 00             	nopl   (%rax)
  400528:	e9 73 ff ff ff       	jmpq   4004a0 <register_tm_clones>

000000000040052d <main>:
  40052d:	55                   	push   %rbp
  40052e:	48 89 e5             	mov    %rsp,%rbp
  400531:	48 83 ec 20          	sub    $0x20,%rsp
  400535:	89 7d ec             	mov    %edi,-0x14(%rbp)
  400538:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40053c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  400543:	eb 0e                	jmp    400553 <main+0x26>
  400545:	bf e4 05 40 00       	mov    $0x4005e4,%edi
  40054a:	e8 c1 fe ff ff       	callq  400410 <puts@plt>
  40054f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  400553:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)
  400557:	7e ec                	jle    400545 <main+0x18>
  400559:	b8 00 00 00 00       	mov    $0x0,%eax
  40055e:	c9                   	leaveq 
  40055f:	c3                   	retq   

0000000000400560 <__libc_csu_init>:
  400560:	41 57                	push   %r15
  400562:	41 89 ff             	mov    %edi,%r15d
  400565:	41 56                	push   %r14
  400567:	49 89 f6             	mov    %rsi,%r14
  40056a:	41 55                	push   %r13
  40056c:	49 89 d5             	mov    %rdx,%r13
  40056f:	41 54                	push   %r12
  400571:	4c 8d 25 98 08 20 00 	lea    0x200898(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400578:	55                   	push   %rbp
  400579:	48 8d 2d 98 08 20 00 	lea    0x200898(%rip),%rbp        # 600e18 <__init_array_end>
  400580:	53                   	push   %rbx
  400581:	4c 29 e5             	sub    %r12,%rbp
  400584:	31 db                	xor    %ebx,%ebx
  400586:	48 c1 fd 03          	sar    $0x3,%rbp
  40058a:	48 83 ec 08          	sub    $0x8,%rsp
  40058e:	e8 4d fe ff ff       	callq  4003e0 <_init>
  400593:	48 85 ed             	test   %rbp,%rbp
  400596:	74 1e                	je     4005b6 <__libc_csu_init+0x56>
  400598:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40059f:	00 
  4005a0:	4c 89 ea             	mov    %r13,%rdx
  4005a3:	4c 89 f6             	mov    %r14,%rsi
  4005a6:	44 89 ff             	mov    %r15d,%edi
  4005a9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4005ad:	48 83 c3 01          	add    $0x1,%rbx
  4005b1:	48 39 eb             	cmp    %rbp,%rbx
  4005b4:	75 ea                	jne    4005a0 <__libc_csu_init+0x40>
  4005b6:	48 83 c4 08          	add    $0x8,%rsp
  4005ba:	5b                   	pop    %rbx
  4005bb:	5d                   	pop    %rbp
  4005bc:	41 5c                	pop    %r12
  4005be:	41 5d                	pop    %r13
  4005c0:	41 5e                	pop    %r14
  4005c2:	41 5f                	pop    %r15
  4005c4:	c3                   	retq   
  4005c5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  4005cc:	00 00 00 00 

00000000004005d0 <__libc_csu_fini>:
  4005d0:	f3 c3                	repz retq 

セクション .fini の逆アセンブル:

00000000004005d4 <_fini>:
  4005d4:	48 83 ec 08          	sub    $0x8,%rsp
  4005d8:	48 83 c4 08          	add    $0x8,%rsp
  4005dc:	c3                   	retq   

セクション .rodata の逆アセンブル:

00000000004005e0 <_IO_stdin_used>:
  4005e0:	01 00                	add    %eax,(%rax)
  4005e2:	02 00                	add    (%rax),%al
  4005e4:	48                   	rex.W
  4005e5:	65                   	gs
  4005e6:	6c                   	insb   (%dx),%es:(%rdi)
  4005e7:	6c                   	insb   (%dx),%es:(%rdi)
  4005e8:	6f                   	outsl  %ds:(%rsi),(%dx)
  4005e9:	20 57 6f             	and    %dl,0x6f(%rdi)
  4005ec:	72 6c                	jb     40065a <_IO_stdin_used+0x7a>
  4005ee:	64                   	fs
	...

セクション .eh_frame_hdr の逆アセンブル:

00000000004005f0 <.eh_frame_hdr>:
  4005f0:	01 1b                	add    %ebx,(%rbx)
  4005f2:	03 3b                	add    (%rbx),%edi
  4005f4:	34 00                	xor    $0x0,%al
  4005f6:	00 00                	add    %al,(%rax)
  4005f8:	05 00 00 00 10       	add    $0x10000000,%eax
  4005fd:	fe                   	(bad)  
  4005fe:	ff                   	(bad)  
  4005ff:	ff 80 00 00 00 50    	incl   0x50000000(%rax)
  400605:	fe                   	(bad)  
  400606:	ff                   	(bad)  
  400607:	ff 50 00             	callq  *0x0(%rax)
  40060a:	00 00                	add    %al,(%rax)
  40060c:	3d ff ff ff a8       	cmp    $0xa8ffffff,%eax
  400611:	00 00                	add    %al,(%rax)
  400613:	00 70 ff             	add    %dh,-0x1(%rax)
  400616:	ff                   	(bad)  
  400617:	ff c8                	dec    %eax
  400619:	00 00                	add    %al,(%rax)
  40061b:	00 e0                	add    %ah,%al
  40061d:	ff                   	(bad)  
  40061e:	ff                   	(bad)  
  40061f:	ff 10                	callq  *(%rax)
  400621:	01 00                	add    %eax,(%rax)
	...

セクション .eh_frame の逆アセンブル:

0000000000400628 <__FRAME_END__-0xf0>:
  400628:	14 00                	adc    $0x0,%al
  40062a:	00 00                	add    %al,(%rax)
  40062c:	00 00                	add    %al,(%rax)
  40062e:	00 00                	add    %al,(%rax)
  400630:	01 7a 52             	add    %edi,0x52(%rdx)
  400633:	00 01                	add    %al,(%rcx)
  400635:	78 10                	js     400647 <_IO_stdin_used+0x67>
  400637:	01 1b                	add    %ebx,(%rbx)
  400639:	0c 07                	or     $0x7,%al
  40063b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400641:	00 00                	add    %al,(%rax)
  400643:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400646:	00 00                	add    %al,(%rax)
  400648:	f8                   	clc    
  400649:	fd                   	std    
  40064a:	ff                   	(bad)  
  40064b:	ff 2a                	ljmpq  *(%rdx)
	...
  400655:	00 00                	add    %al,(%rax)
  400657:	00 14 00             	add    %dl,(%rax,%rax,1)
  40065a:	00 00                	add    %al,(%rax)
  40065c:	00 00                	add    %al,(%rax)
  40065e:	00 00                	add    %al,(%rax)
  400660:	01 7a 52             	add    %edi,0x52(%rdx)
  400663:	00 01                	add    %al,(%rcx)
  400665:	78 10                	js     400677 <_IO_stdin_used+0x97>
  400667:	01 1b                	add    %ebx,(%rbx)
  400669:	0c 07                	or     $0x7,%al
  40066b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  400671:	00 00                	add    %al,(%rax)
  400673:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400676:	00 00                	add    %al,(%rax)
  400678:	88 fd                	mov    %bh,%ch
  40067a:	ff                   	(bad)  
  40067b:	ff 40 00             	incl   0x0(%rax)
  40067e:	00 00                	add    %al,(%rax)
  400680:	00 0e                	add    %cl,(%rsi)
  400682:	10 46 0e             	adc    %al,0xe(%rsi)
  400685:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400688:	0b 77 08             	or     0x8(%rdi),%esi
  40068b:	80 00 3f             	addb   $0x3f,(%rax)
  40068e:	1a 3b                	sbb    (%rbx),%bh
  400690:	2a 33                	sub    (%rbx),%dh
  400692:	24 22                	and    $0x22,%al
  400694:	00 00                	add    %al,(%rax)
  400696:	00 00                	add    %al,(%rax)
  400698:	1c 00                	sbb    $0x0,%al
  40069a:	00 00                	add    %al,(%rax)
  40069c:	44 00 00             	add    %r8b,(%rax)
  40069f:	00 8d fe ff ff 33    	add    %cl,0x33fffffe(%rbp)
  4006a5:	00 00                	add    %al,(%rax)
  4006a7:	00 00                	add    %al,(%rax)
  4006a9:	41 0e                	rex.B (bad) 
  4006ab:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4006b1:	6e                   	outsb  %ds:(%rsi),(%dx)
  4006b2:	0c 07                	or     $0x7,%al
  4006b4:	08 00                	or     %al,(%rax)
  4006b6:	00 00                	add    %al,(%rax)
  4006b8:	44 00 00             	add    %r8b,(%rax)
  4006bb:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
  4006bf:	00 a0 fe ff ff 65    	add    %ah,0x65fffffe(%rax)
  4006c5:	00 00                	add    %al,(%rax)
  4006c7:	00 00                	add    %al,(%rax)
  4006c9:	42 0e                	rex.X (bad) 
  4006cb:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
  4006d1:	8e 03                	mov    (%rbx),%es
  4006d3:	45 0e                	rex.RB (bad) 
  4006d5:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
  4006db:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701529 <_end+0xffffffff861004e1>
  4006e1:	06                   	(bad)  
  4006e2:	48 0e                	rex.W (bad) 
  4006e4:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  4006ea:	6c                   	insb   (%dx),%es:(%rdi)
  4006eb:	0e                   	(bad)  
  4006ec:	38 41 0e             	cmp    %al,0xe(%rcx)
  4006ef:	30 41 0e             	xor    %al,0xe(%rcx)
  4006f2:	28 42 0e             	sub    %al,0xe(%rdx)
  4006f5:	20 42 0e             	and    %al,0xe(%rdx)
  4006f8:	18 42 0e             	sbb    %al,0xe(%rdx)
  4006fb:	10 42 0e             	adc    %al,0xe(%rdx)
  4006fe:	08 00                	or     %al,(%rax)
  400700:	14 00                	adc    $0x0,%al
  400702:	00 00                	add    %al,(%rax)
  400704:	ac                   	lods   %ds:(%rsi),%al
  400705:	00 00                	add    %al,(%rax)
  400707:	00 c8                	add    %cl,%al
  400709:	fe                   	(bad)  
  40070a:	ff                   	(bad)  
  40070b:	ff 02                	incl   (%rdx)
	...

0000000000400718 <__FRAME_END__>:
  400718:	00 00                	add    %al,(%rax)
	...

セクション .init_array の逆アセンブル:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	00 05 40 00 00 00    	add    %al,0x40(%rip)        # 600e56 <_DYNAMIC+0x2e>
	...

セクション .fini_array の逆アセンブル:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	e0 04                	loopne 600e1e <__do_global_dtors_aux_fini_array_entry+0x6>
  600e1a:	40 00 00             	add    %al,(%rax)
  600e1d:	00 00                	add    %al,(%rax)
	...

セクション .jcr の逆アセンブル:

0000000000600e20 <__JCR_END__>:
	...

セクション .dynamic の逆アセンブル:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	01 00                	add    %eax,(%rax)
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	0c 00                	or     $0x0,%al
  600e3a:	00 00                	add    %al,(%rax)
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	e0 03                	loopne 600e45 <_DYNAMIC+0x1d>
  600e42:	40 00 00             	add    %al,(%rax)
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 d4                	add    %dl,%ah
  600e51:	05 40 00 00 00       	add    $0x40,%eax
  600e56:	00 00                	add    %al,(%rax)
  600e58:	19 00                	sbb    %eax,(%rax)
  600e5a:	00 00                	add    %al,(%rax)
  600e5c:	00 00                	add    %al,(%rax)
  600e5e:	00 00                	add    %al,(%rax)
  600e60:	10 0e                	adc    %cl,(%rsi)
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 1b                	add    %bl,(%rbx)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 08                	add    %cl,(%rax)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 1a                	add    %bl,(%rdx)
  600e79:	00 00                	add    %al,(%rax)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 18                	add    %bl,(%rax)
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	08 00                	or     %al,(%rax)
  600e92:	00 00                	add    %al,(%rax)
  600e94:	00 00                	add    %al,(%rax)
  600e96:	00 00                	add    %al,(%rax)
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 18                	add    %bl,(%rax)
  600eb1:	03 40 00             	add    0x0(%rax),%eax
  600eb4:	00 00                	add    %al,(%rax)
  600eb6:	00 00                	add    %al,(%rax)
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 0a                	add    %cl,(%rdx)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 3d 00 00 00 00    	add    %bh,0x0(%rip)        # 600ed5 <_DYNAMIC+0xad>
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 0b                	add    %cl,(%rbx)
  600ed9:	00 00                	add    %al,(%rax)
  600edb:	00 00                	add    %al,(%rax)
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 18                	add    %bl,(%rax)
  600ee1:	00 00                	add    %al,(%rax)
  600ee3:	00 00                	add    %al,(%rax)
  600ee5:	00 00                	add    %al,(%rax)
  600ee7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 03                	add    %al,(%rbx)
	...
  600f01:	10 60 00             	adc    %ah,0x0(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	02 00                	add    (%rax),%al
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	48 00 00             	rex.W add %al,(%rax)
  600f13:	00 00                	add    %al,(%rax)
  600f15:	00 00                	add    %al,(%rax)
  600f17:	00 14 00             	add    %dl,(%rax,%rax,1)
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 17                	add    %dl,(%rdi)
  600f29:	00 00                	add    %al,(%rax)
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 98 03 40 00 00    	add    %bl,0x4003(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 07                	add    %al,(%rdi)
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 80 03 40 00 00    	add    %al,0x4003(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 08                	add    %cl,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 18                	add    %bl,(%rax)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 09                	add    %cl,(%rcx)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 18                	add    %bl,(%rax)
  600f61:	00 00                	add    %al,(%rax)
  600f63:	00 00                	add    %al,(%rax)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 fe                	add    %bh,%dh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 60 03             	add    %ah,0x3(%rax)
  600f72:	40 00 00             	add    %al,(%rax)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 ff                	add    %bh,%bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 01                	add    %al,(%rcx)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 f0                	add    %dh,%al
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 56 03             	add    %dl,0x3(%rsi)
  600f92:	40 00 00             	add    %al,(%rax)
	...

セクション .got の逆アセンブル:

0000000000600ff8 <.got>:
	...

セクション .got.plt の逆アセンブル:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 16                	add    %dl,(%rsi)
  601019:	04 40                	add    $0x40,%al
  60101b:	00 00                	add    %al,(%rax)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 26                	add    %ah,(%rsi)
  601021:	04 40                	add    $0x40,%al
  601023:	00 00                	add    %al,(%rax)
  601025:	00 00                	add    %al,(%rax)
  601027:	00 36                	add    %dh,(%rsi)
  601029:	04 40                	add    $0x40,%al
  60102b:	00 00                	add    %al,(%rax)
  60102d:	00 00                	add    %al,(%rax)
	...

セクション .data の逆アセンブル:

0000000000601030 <__data_start>:
	...

0000000000601038 <__dso_handle>:
	...

セクション .bss の逆アセンブル:

0000000000601040 <__bss_start>:
	...

セクション .comment の逆アセンブル:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400368>
   a:	74 75                	je     81 <_init-0x40035f>
   c:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
   f:	38 2e                	cmp    %ch,(%rsi)
  11:	32 2d 31 39 75 62    	xor    0x62753931(%rip),%ch        # 62753948 <_end+0x62152900>
  17:	75 6e                	jne    87 <_init-0x400359>
  19:	74 75                	je     90 <_init-0x400350>
  1b:	31 29                	xor    %ebp,(%rcx)
  1d:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  20:	38 2e                	cmp    %ch,(%rsi)
  22:	32 00                	xor    (%rax),%al

セクション .debug_aranges の逆アセンブル:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	2d 05 40 00 00       	sub    $0x4005,%eax
  15:	00 00                	add    %al,(%rax)
  17:	00 33                	add    %dh,(%rbx)
	...

セクション .debug_info の逆アセンブル:

0000000000000000 <.debug_info>:
   0:	c6 00 00             	movb   $0x0,(%rax)
   3:	00 04 00             	add    %al,(%rax,%rax,1)
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	01 68 00             	add    %ebp,0x0(%rax)
  13:	00 00                	add    %al,(%rax)
  15:	50                   	push   %rax
  16:	00 00                	add    %al,(%rax)
  18:	00 2d 05 40 00 00    	add    %ch,0x4005(%rip)        # 4023 <_init-0x3fc3bd>
  1e:	00 00                	add    %al,(%rax)
  20:	00 33                	add    %dh,(%rbx)
	...
  2a:	00 00                	add    %al,(%rax)
  2c:	00 02                	add    %al,(%rdx)
  2e:	08 07                	or     %al,(%rdi)
  30:	3e 00 00             	add    %al,%ds:(%rax)
  33:	00 02                	add    %al,(%rdx)
  35:	01 08                	add    %ecx,(%rax)
  37:	74 00                	je     39 <_init-0x4003a7>
  39:	00 00                	add    %al,(%rax)
  3b:	02 02                	add    (%rdx),%al
  3d:	07                   	(bad)  
  3e:	95                   	xchg   %eax,%ebp
  3f:	00 00                	add    %al,(%rax)
  41:	00 02                	add    %al,(%rdx)
  43:	04 07                	add    $0x7,%al
  45:	43 00 00             	rex.XB add %al,(%r8)
  48:	00 02                	add    %al,(%rdx)
  4a:	01 06                	add    %eax,(%rsi)
  4c:	76 00                	jbe    4e <_init-0x400392>
  4e:	00 00                	add    %al,(%rax)
  50:	02 02                	add    (%rdx),%al
  52:	05 a8 00 00 00       	add    $0xa8,%eax
  57:	03 04 05 69 6e 74 00 	add    0x746e69(,%rax,1),%eax
  5e:	02 08                	add    (%rax),%cl
  60:	05 87 00 00 00       	add    $0x87,%eax
  65:	02 08                	add    (%rax),%cl
  67:	07                   	(bad)  
  68:	b2 00                	mov    $0x0,%dl
  6a:	00 00                	add    %al,(%rax)
  6c:	04 08                	add    $0x8,%al
  6e:	72 00                	jb     70 <_init-0x400370>
  70:	00 00                	add    %al,(%rax)
  72:	02 01                	add    (%rcx),%al
  74:	06                   	(bad)  
  75:	7d 00                	jge    77 <_init-0x400369>
  77:	00 00                	add    %al,(%rax)
  79:	05 82 00 00 00       	add    $0x82,%eax
  7e:	01 03                	add    %eax,(%rbx)
  80:	57                   	push   %rdi
  81:	00 00                	add    %al,(%rax)
  83:	00 2d 05 40 00 00    	add    %ch,0x4005(%rip)        # 408e <_init-0x3fc352>
  89:	00 00                	add    %al,(%rax)
  8b:	00 33                	add    %dh,(%rbx)
  8d:	00 00                	add    %al,(%rax)
  8f:	00 00                	add    %al,(%rax)
  91:	00 00                	add    %al,(%rax)
  93:	00 01                	add    %al,(%rcx)
  95:	9c                   	pushfq 
  96:	c3                   	retq   
  97:	00 00                	add    %al,(%rax)
  99:	00 06                	add    %al,(%rsi)
  9b:	90                   	nop
  9c:	00 00                	add    %al,(%rax)
  9e:	00 01                	add    %al,(%rcx)
  a0:	03 57 00             	add    0x0(%rdi),%edx
  a3:	00 00                	add    %al,(%rax)
  a5:	02 91 5c 06 bb 00    	add    0xbb065c(%rcx),%dl
  ab:	00 00                	add    %al,(%rax)
  ad:	01 03                	add    %eax,(%rbx)
  af:	c3                   	retq   
  b0:	00 00                	add    %al,(%rax)
  b2:	00 02                	add    %al,(%rdx)
  b4:	91                   	xchg   %eax,%ecx
  b5:	50                   	push   %rax
  b6:	07                   	(bad)  
  b7:	69 00 01 05 57 00    	imul   $0x570501,(%rax),%eax
  bd:	00 00                	add    %al,(%rax)
  bf:	02 91 6c 00 04 08    	add    0x804006c(%rcx),%dl
  c5:	6c                   	insb   (%dx),%es:(%rdi)
  c6:	00 00                	add    %al,(%rax)
	...

セクション .debug_abbrev の逆アセンブル:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <_end+0x2ab02ce>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	11 01                	adc    %eax,(%rcx)
   d:	12 07                	adc    (%rdi),%al
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 24 00             	add    (%rax,%rax,1),%ah
  16:	0b 0b                	or     (%rbx),%ecx
  18:	3e 0b 03             	or     %ds:(%rbx),%eax
  1b:	0e                   	(bad)  
  1c:	00 00                	add    %al,(%rax)
  1e:	03 24 00             	add    (%rax,%rax,1),%esp
  21:	0b 0b                	or     (%rbx),%ecx
  23:	3e 0b 03             	or     %ds:(%rbx),%eax
  26:	08 00                	or     %al,(%rax)
  28:	00 04 0f             	add    %al,(%rdi,%rcx,1)
  2b:	00 0b                	add    %cl,(%rbx)
  2d:	0b 49 13             	or     0x13(%rcx),%ecx
  30:	00 00                	add    %al,(%rax)
  32:	05 2e 01 3f 19       	add    $0x193f012e,%eax
  37:	03 0e                	add    (%rsi),%ecx
  39:	3a 0b                	cmp    (%rbx),%cl
  3b:	3b 0b                	cmp    (%rbx),%ecx
  3d:	27                   	(bad)  
  3e:	19 49 13             	sbb    %ecx,0x13(%rcx)
  41:	11 01                	adc    %eax,(%rcx)
  43:	12 07                	adc    (%rdi),%al
  45:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
  4c:	00 00                	add    %al,(%rax)
  4e:	06                   	(bad)  
  4f:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
  54:	0b 3b                	or     (%rbx),%edi
  56:	0b 49 13             	or     0x13(%rcx),%ecx
  59:	02 18                	add    (%rax),%bl
  5b:	00 00                	add    %al,(%rax)
  5d:	07                   	(bad)  
  5e:	34 00                	xor    $0x0,%al
  60:	03 08                	add    (%rax),%ecx
  62:	3a 0b                	cmp    (%rbx),%cl
  64:	3b 0b                	cmp    (%rbx),%ecx
  66:	49 13 02             	adc    (%r10),%rax
  69:	18 00                	sbb    %al,(%rax)
	...

セクション .debug_line の逆アセンブル:

0000000000000000 <.debug_line>:
   0:	4d 00 00             	rex.WRB add %r8b,(%r8)
   3:	00 02                	add    %al,(%rdx)
   5:	00 22                	add    %ah,(%rdx)
   7:	00 00                	add    %al,(%rax)
   9:	00 01                	add    %al,(%rcx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	00 66 69             	add    %ah,0x69(%rsi)
  1e:	72 73                	jb     93 <_init-0x40034d>
  20:	74 70                	je     92 <_init-0x40034e>
  22:	72 6f                	jb     93 <_init-0x40034d>
  24:	67 2e 63 00          	movslq %cs:(%eax),%eax
  28:	00 00                	add    %al,(%rax)
  2a:	00 00                	add    %al,(%rax)
  2c:	00 09                	add    %cl,(%rcx)
  2e:	02 2d 05 40 00 00    	add    0x4005(%rip),%ch        # 4039 <_init-0x3fc3a7>
  34:	00 00                	add    %al,(%rax)
  36:	00 15 e6 00 02 04    	add    %dl,0x40200e6(%rip)        # 4020122 <_end+0x3a1f0da>
  3c:	02 92 00 02 04 02    	add    0x2040200(%rdx),%dl
  42:	9c                   	pushfq 
  43:	00 02                	add    %al,(%rdx)
  45:	04 01                	add    $0x1,%al
  47:	06                   	(bad)  
  48:	4a 06                	rex.WX (bad) 
  4a:	6a 59                	pushq  $0x59
  4c:	02 02                	add    (%rdx),%al
  4e:	00 01                	add    %al,(%rcx)
  50:	01                   	.byte 0x1

セクション .debug_str の逆アセンブル:

0000000000000000 <.debug_str>:
   0:	47                   	rex.RXB
   1:	4e 55                	rex.WRX push %rbp
   3:	20 43 20             	and    %al,0x20(%rbx)
   6:	34 2e                	xor    $0x2e,%al
   8:	38 2e                	cmp    %ch,(%rsi)
   a:	32 20                	xor    (%rax),%ah
   c:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  11:	65                   	gs
  12:	3d 67 65 6e 65       	cmp    $0x656e6567,%eax
  17:	72 69                	jb     82 <_init-0x40035e>
  19:	63 20                	movslq (%rax),%esp
  1b:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  20:	68 3d 78 38 36       	pushq  $0x3638783d
  25:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  2a:	67 20 2d 66 73 74 61 	and    %ch,0x61747366(%eip)        # 61747397 <_end+0x6114634f>
  31:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
  34:	70 72                	jo     a8 <_init-0x400338>
  36:	6f                   	outsl  %ds:(%rsi),(%dx)
  37:	74 65                	je     9e <_init-0x400342>
  39:	63 74 6f 72          	movslq 0x72(%rdi,%rbp,2),%esi
  3d:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
  41:	67 20 75 6e          	and    %dh,0x6e(%ebp)
  45:	73 69                	jae    b0 <_init-0x400330>
  47:	67 6e                	outsb  %ds:(%esi),(%dx)
  49:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
  4e:	74 00                	je     50 <_init-0x400390>
  50:	2f                   	(bad)  
  51:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
  56:	70 72                	jo     ca <_init-0x400316>
  58:	61                   	(bad)  
  59:	74 75                	je     d0 <_init-0x400310>
  5b:	6c                   	insb   (%dx),%es:(%rdi)
  5c:	61                   	(bad)  
  5d:	2f                   	(bad)  
  5e:	68 61 63 6b 5f       	pushq  $0x5f6b6361
  63:	74 65                	je     ca <_init-0x400316>
  65:	78 74                	js     db <_init-0x400305>
  67:	00 66 69             	add    %ah,0x69(%rsi)
  6a:	72 73                	jb     df <_init-0x400301>
  6c:	74 70                	je     de <_init-0x400302>
  6e:	72 6f                	jb     df <_init-0x400301>
  70:	67 2e 63 00          	movslq %cs:(%eax),%eax
  74:	75 6e                	jne    e4 <_init-0x4002fc>
  76:	73 69                	jae    e1 <_init-0x4002ff>
  78:	67 6e                	outsb  %ds:(%esi),(%dx)
  7a:	65 64 20 63 68       	gs and %ah,%fs:%gs:0x68(%rbx)
  7f:	61                   	(bad)  
  80:	72 00                	jb     82 <_init-0x40035e>
  82:	6d                   	insl   (%dx),%es:(%rdi)
  83:	61                   	(bad)  
  84:	69 6e 00 6c 6f 6e 67 	imul   $0x676e6f6c,0x0(%rsi),%ebp
  8b:	20 69 6e             	and    %ch,0x6e(%rcx)
  8e:	74 00                	je     90 <_init-0x400350>
  90:	61                   	(bad)  
  91:	72 67                	jb     fa <_init-0x4002e6>
  93:	63 00                	movslq (%rax),%eax
  95:	73 68                	jae    ff <_init-0x4002e1>
  97:	6f                   	outsl  %ds:(%rsi),(%dx)
  98:	72 74                	jb     10e <_init-0x4002d2>
  9a:	20 75 6e             	and    %dh,0x6e(%rbp)
  9d:	73 69                	jae    108 <_init-0x4002d8>
  9f:	67 6e                	outsb  %ds:(%esi),(%dx)
  a1:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
  a6:	74 00                	je     a8 <_init-0x400338>
  a8:	73 68                	jae    112 <_init-0x4002ce>
  aa:	6f                   	outsl  %ds:(%rsi),(%dx)
  ab:	72 74                	jb     121 <_init-0x4002bf>
  ad:	20 69 6e             	and    %ch,0x6e(%rcx)
  b0:	74 00                	je     b2 <_init-0x40032e>
  b2:	73 69                	jae    11d <_init-0x4002c3>
  b4:	7a 65                	jp     11b <_init-0x4002c5>
  b6:	74 79                	je     131 <_init-0x4002af>
  b8:	70 65                	jo     11f <_init-0x4002c1>
  ba:	00 61 72             	add    %ah,0x72(%rcx)
  bd:	67 76 00             	addr32 jbe c0 <_init-0x400320>
